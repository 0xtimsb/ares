[package]
name = "gpui"
version = "0.1.0"
edition.workspace = true
authors = ["Nathan Sobo <nathan@zed.dev>"]
description = "Zed's GPU-accelerated UI framework"
publish.workspace = true
license = "Apache-2.0"

[lints]
workspace = true

[features]
default = ["font-kit", "wayland"]

runtime_shaders = []
wayland = [
    "ashpd",
    "cosmic-text",
    "font-kit",
    "calloop-wayland-source",
    "wayland-backend",
    "wayland-client",
    "wayland-cursor",
    "wayland-protocols",
    "wayland-protocols-plasma",
    "filedescriptor",
    "xkbcommon",
    "open",
]

[lib]
path = "src/gpui.rs"
doctest = false

[dependencies]
anyhow = "1.0.86"
async-task = "4.7"
backtrace = { version = "0.3", optional = true }
rustc-hash = "2.1.0"
derive_more = "0.99.17"
etagere = "0.2"
futures = "0.3"
gpui_macros.workspace = true
inventory = "0.3.19"
itertools = "0.14.0"
log = { version = "0.4.16", features = ["kv_unstable_serde", "serde"] }
num_cpus = "1.13"
parking = "2.0.0"
parking_lot = "0.12.1"
postage = { version = "0.5", features = ["futures-traits"] }
profiling = "1"
rand = "0.8.5"
raw-window-handle = "0.6"
refineable.workspace = true
schemars = { version = "0.8", features = ["impl_json_schema", "indexmap2"] }
seahash = "4.1"
semantic_version.workspace = true
serde = { version = "1.0", features = ["derive", "rc"] }
serde_derive = { version = "1.0", features = ["deserialize_in_place"] }
serde_json = { version = "1.0", features = ["preserve_order", "raw_value"] }
slotmap = "1.0.6"
smallvec = { version = "1.6", features = ["union"] }
smol = "2.0"
strum = { version = "0.26.0", features = ["derive"] }
taffy = "0.4.3"
thiserror = "1.0.29"
util.workspace = true
uuid = { version = "1.1.2", features = ["v4", "v5", "v7", "serde"] }
# waker-fn = "1.2.0"

[target.'cfg(any(target_os = "linux", target_os = "freebsd", target_os = "macos"))'.dependencies]
pathfinder_geometry = "0.5"

[target.'cfg(any(target_os = "linux", target_os = "freebsd"))'.dependencies]
# Always used
flume = "0.11"
oo7 = { version = "0.4.0", default-features = false, features = [
    "async-std",
    "native_crypto",
] }

# Used in both windowing options
ashpd = { workspace = true, optional = true }
cosmic-text = { git = "https://github.com/pop-os/cosmic-text", rev = "542b20c", optional = true }
font-kit = { git = "https://github.com/zed-industries/font-kit", rev = "40391b7", features = [
    "source-fontconfig-dlopen",
], optional = true }
calloop = { version = "0.13.0" }
filedescriptor = { version = "0.8.2", optional = true }
open = { version = "5.2.0", optional = true }

# Wayland
calloop-wayland-source = { version = "0.3.0", optional = true }
wayland-backend = { version = "0.3.3", features = [
    "client_system",
    "dlopen",
], optional = true }
wayland-client = { version = "0.31.2", optional = true }
wayland-cursor = { version = "0.31.1", optional = true }
wayland-protocols = { version = "0.31.2", features = [
    "client",
    "staging",
    "unstable",
], optional = true }
wayland-protocols-plasma = { version = "0.2.0", features = [
    "client",
], optional = true }

[target.'cfg(any(target_os = "linux", target_os = "freebsd"))'.build-dependencies]
naga = { version = "23.1.0", features = ["wgsl-in"] }

[[example]]
name = "hello_world"
path = "examples/hello_world.rs"

[[example]]
name = "input"
path = "examples/input.rs"

[[example]]
name = "opacity"
path = "examples/opacity.rs"

[[example]]
name = "pattern"
path = "examples/pattern.rs"

[[example]]
name = "shadow"
path = "examples/shadow.rs"

[[example]]
name = "text_wrapper"
path = "examples/text_wrapper.rs"

[[example]]
name = "uniform_list"
path = "examples/uniform_list.rs"

[[example]]
name = "window_shadow"
path = "examples/window_shadow.rs"

[[example]]
name = "on_window_close_quit"
path = "examples/on_window_close_quit.rs"
